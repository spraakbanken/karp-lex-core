name: CI

on:
  push:
    branches:
      - "*"
    tags-ignore:
      - v*
  pull_request:
    branches:
      - "*"

env:
  POETRY_VERSION: 1.3.1

jobs:
  tests:
    name: ${{ matrix.task.name }} py-${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
        # python-version: ["3.10", "3.11-dev"]  TODO: enable when setup-pdm works
        os: [ubuntu-latest]
        task:
          - name: Lint code
            run: make lint
            # allow_failure: false
          - name: Typecheck
            run: make type-check
            # allow_failure: true
          - name: Doc tests
            run: make run-doc-tests
          - name: Tests
            run: make test

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # - name: Load cached $HOME/.local
      #   uses: actions/cache@v3.1.6
      #   with:
      #     path: ~/.local
      #     key: dotlocal-${{ runner.os }}-${{ matrix.python-version }}-${{ env.POETRY_VERSION }}-${{ hashFiles('.github/workflows/build.yml') }}

      - name: Install Poetry
        uses: snok/install-poetry@v1.3
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        # if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: make install-dev

      - name: ${{ matrix.task.name }}
        run: ${{ matrix.task.run }}
        # continue-on-error: ${{ matrix.task.allow_failure }}
